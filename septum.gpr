-- begin auto-gpr-with --
--  This section was automatically added by Alire
with "atomic.gpr";
with "dir_iterators.gpr";
with "progress_indicators.gpr";
-- end auto-gpr-with --

with "config/septum_config.gpr";
project Septum is

   Septum_Sources := ("src/common");

   type Enabled_Kind is ("enabled", "disabled");
   Compile_Checks : Enabled_Kind := External ("SEPTUM_COMPILE_CHECKS", "enabled");
   Runtime_Checks : Enabled_Kind := External ("SEPTUM_RUNTIME_CHECKS", "enabled");
   Style_Checks : Enabled_Kind := External ("SEPTUM_STYLE_CHECKS", "enabled");
   Contracts_Checks : Enabled_Kind := External ("SEPTUM_CONTRACTS", "enabled");

   type Platform_Type is ("windows", "linux", "macos");
   Platform : Platform_Type := external ("Septum_Platform");
   case Platform is
      when "windows" => Septum_Sources := Septum_Sources & "src/windows";
      when "linux"   => Septum_Sources := Septum_Sources & "src/linux";
      when "macos"   => Septum_Sources := Septum_Sources & "src/mac";
   end case;

   type Build_Kind is ("debug", "optimize");
   Build_Mode : Build_Kind := External ("SEPTUM_BUILD_MODE", "debug");

   for Source_Dirs use Septum_Sources;
   for Object_Dir use "obj";
   for Create_Missing_Dirs use "True";
   for Exec_Dir use "bin";
   for Main use ("septum.adb");

   Compile_Checks_Switches := ();
   case Compile_Checks is
      when "enabled" =>
         Compile_Checks_Switches := (
            "-gnatwa",  -- All warnings
            "-gnatVa",  -- All validity checks
            "-gnatwe"   -- Warnings as errors
         );
      when others => null;
   end case;

   Runtime_Checks_Switches := ();
   case Runtime_Checks is
      when "enabled" =>
         Runtime_Checks_Switches := (
            "-gnato",        -- Enable numeric overflow checking;
            "-fstack-check", -- Stack overflow checking
            "-gnatVa"        -- All validity checks
         );
      when others =>
         Runtime_Checks_Switches :=
           ("-gnatp"); -- Suppress checks
   end case;

   Style_Checks_Switches := ();
   case Style_Checks is
      when "enabled" =>
         Style_Checks_Switches := (
            "-gnaty-d",   -- Disable no DOS line terminators
            "-gnatyM200", -- Maximum line length
            "-gnatyO"     -- Overriding subprograms explicitly marked as such
         );
      when others => null;
   end case;

   Contracts_Switches := ();
   case Contracts_Checks is
      when "enabled" =>
         Contracts_Switches :=
           ("-gnata"); --  Enable assertions and contracts
      when others => null;
   end case;

   Build_Switches := ();
   case Build_Mode is
      when "optimize" =>
         Build_Switches := ("-O3",     -- Optimization
                            "-gnatn"); -- Enable inlining
      when "debug" =>
         Build_Switches := ("-g",   -- Debug info
                            "-Og"); -- No optimization
   end case;

   package Compiler is
      for Default_Switches ("Ada") use
        Compile_Checks_Switches &
        Build_Switches &
        Runtime_Checks_Switches &
        Style_Checks_Switches &
        Contracts_Switches &
        ("-gnatw.X",      -- Disable warnings for No_Exception_Propagation
         "-gnatf",        -- Full errors. Multiple errors per line, all undefined references,
                          -- Do not attempt to suppress cascaded errors.
         "-gnat12",       -- Use Ada 2012
         "-gnatw.oa",     -- Warning settings
         "-gnatQ"         -- Don't quit. Generate ALI and tree files even if illegalities
        );
   end Compiler;

   package Binder is
      for Switches ("Ada") use ("-Es"); --  Symbolic traceback
   end Binder;

   package Pretty_Printer is
      for Default_Switches ("ada") use (
         "-i4",                     -- Indentation level
         "-M120",                   -- Line length
         "-c0",                     -- Don't change comments.
         "--no-separate-is",
         "--no-separate-loop-then",
         "-l2"                      -- Compact layoud
         );
   end Pretty_Printer;

end Septum;